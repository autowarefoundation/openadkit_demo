name: docker-build-and-push
description: ""

inputs:
  name:
    description: ""
    required: true
  platform:
    description: ""
    required: true
  bake-target:
    description: ""
    required: true
  build-args:
    description: ""
    required: false
  tag-suffix:
    description: ""
    required: false

runs:
  using: composite
  steps:
    - name: Install jq and vcstool
      run: |
        sudo apt-get -y update
        sudo apt-get -y install jq python3-pip
        pip install --no-cache-dir vcstool
      shell: bash

    - name: Run vcs import
      run: |
        mkdir src
        vcs import src < autoware.repos
        vcs import src < simulator.repos
      shell: bash

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Restore ccache
      uses: actions/cache/restore@v4
      with:
        path: |
          root-ccache
        key: ccache-${{ inputs.platform }}-${{ inputs.name }}-${{ hashFiles('src/**/*.cpp') }}
        restore-keys: |
          ccache-${{ inputs.platform }}-${{ inputs.name }}-
          ccache-${{ inputs.platform }}-

    - name: Restore apt-get
      uses: actions/cache/restore@v4
      with:
        path: |
          var-cache-apt
        key: apt-get-${{ inputs.platform }}-${{ inputs.name }}-${{ hashFiles('src/**/package.xml') }}
        restore-keys: |
          apt-get-${{ inputs.platform }}-${{ inputs.name }}-
          apt-get-${{ inputs.platform }}-

    - name: Inject cache into docker
      uses: reproducible-containers/buildkit-cache-dance@v3.1.2
      with:
        cache-map: |
          {
            "root-ccache": "/root/.ccache",
            "var-cache-apt": "/var/cache/apt"
          }
        skip-extraction: true

    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
      shell: bash

    - name: Docker meta for autoware:simulator-monolithic
      id: meta-simulator-monolithic
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository_owner }}/${{ inputs.bake-target }}
        tags: |
          type=raw,value=simulator-monolithic${{ inputs.tag-suffix }}-${{ inputs.platform }}
          type=raw,value=simulator-monolithic${{ inputs.tag-suffix }}-${{ steps.date.outputs.date }}-${{ inputs.platform }}
        bake-target: docker-metadata-action-simulator-monolithic
        flavor: |
          latest=false

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}

    - name: Build and Push to GitHub Container Registry
      uses: docker/bake-action@v5
      with:
        push: true
        files: |
          docker/docker-bake.hcl
          ${{ steps.meta-simulator-monolithic.outputs.bake-file }}
        provenance: false
        set: |
          ${{ inputs.build-args }}
